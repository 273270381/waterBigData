<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suchness.intellisense.mapper.WaterStationMapper">
  <resultMap id="BaseResultMap" type="com.suchness.intellisense.model.WaterStation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="station_id" jdbcType="VARCHAR" property="stationId" />
    <result column="station_name" jdbcType="VARCHAR" property="stationName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="valley_id" jdbcType="INTEGER" property="valleyId" />
    <result column="code_region" jdbcType="VARCHAR" property="codeRegion" />
    <result column="station_type" jdbcType="INTEGER" property="stationType" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="high" jdbcType="VARCHAR" property="high" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="country_id" jdbcType="INTEGER" property="countryId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, station_id, station_name, address, valley_id, code_region, station_type, latitude, 
    longitude, code, high, create_time, country_id
  </sql>
  <select id="selectByExample" parameterType="com.suchness.intellisense.model.WaterStationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from water_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from water_station
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from water_station
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.suchness.intellisense.model.WaterStationExample">
    delete from water_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suchness.intellisense.model.WaterStation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into water_station (station_id, station_name, address, 
      valley_id, code_region, station_type, 
      latitude, longitude, code, 
      high, create_time, country_id
      )
    values (#{stationId,jdbcType=VARCHAR}, #{stationName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{valleyId,jdbcType=INTEGER}, #{codeRegion,jdbcType=VARCHAR}, #{stationType,jdbcType=INTEGER}, 
      #{latitude,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{high,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{countryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suchness.intellisense.model.WaterStation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into water_station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stationId != null">
        station_id,
      </if>
      <if test="stationName != null">
        station_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="valleyId != null">
        valley_id,
      </if>
      <if test="codeRegion != null">
        code_region,
      </if>
      <if test="stationType != null">
        station_type,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="high != null">
        high,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="countryId != null">
        country_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stationId != null">
        #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null">
        #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="valleyId != null">
        #{valleyId,jdbcType=INTEGER},
      </if>
      <if test="codeRegion != null">
        #{codeRegion,jdbcType=VARCHAR},
      </if>
      <if test="stationType != null">
        #{stationType,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="high != null">
        #{high,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="countryId != null">
        #{countryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suchness.intellisense.model.WaterStationExample" resultType="java.lang.Long">
    select count(*) from water_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update water_station
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stationId != null">
        station_id = #{record.stationId,jdbcType=VARCHAR},
      </if>
      <if test="record.stationName != null">
        station_name = #{record.stationName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.valleyId != null">
        valley_id = #{record.valleyId,jdbcType=INTEGER},
      </if>
      <if test="record.codeRegion != null">
        code_region = #{record.codeRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.stationType != null">
        station_type = #{record.stationType,jdbcType=INTEGER},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.high != null">
        high = #{record.high,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.countryId != null">
        country_id = #{record.countryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update water_station
    set id = #{record.id,jdbcType=INTEGER},
      station_id = #{record.stationId,jdbcType=VARCHAR},
      station_name = #{record.stationName,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      valley_id = #{record.valleyId,jdbcType=INTEGER},
      code_region = #{record.codeRegion,jdbcType=VARCHAR},
      station_type = #{record.stationType,jdbcType=INTEGER},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      high = #{record.high,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      country_id = #{record.countryId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suchness.intellisense.model.WaterStation">
    update water_station
    <set>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="stationName != null">
        station_name = #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="valleyId != null">
        valley_id = #{valleyId,jdbcType=INTEGER},
      </if>
      <if test="codeRegion != null">
        code_region = #{codeRegion,jdbcType=VARCHAR},
      </if>
      <if test="stationType != null">
        station_type = #{stationType,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="high != null">
        high = #{high,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="countryId != null">
        country_id = #{countryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suchness.intellisense.model.WaterStation">
    update water_station
    set station_id = #{stationId,jdbcType=VARCHAR},
      station_name = #{stationName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      valley_id = #{valleyId,jdbcType=INTEGER},
      code_region = #{codeRegion,jdbcType=VARCHAR},
      station_type = #{stationType,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      high = #{high,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      country_id = #{countryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>