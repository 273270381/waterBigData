<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suchness.intellisense.mapper.WaterQualityStationMapper">
  <resultMap id="BaseResultMap" type="com.suchness.intellisense.model.WaterQualityStation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="station_id" jdbcType="INTEGER" property="stationId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="valley_id" jdbcType="INTEGER" property="valleyId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="station_type_id" jdbcType="INTEGER" property="stationTypeId" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="lever_id" jdbcType="INTEGER" property="leverId" />
    <result column="connected" jdbcType="VARCHAR" property="connected" />
    <result column="monitor_time" jdbcType="TIMESTAMP" property="monitorTime" />
    <result column="kmno4" jdbcType="REAL" property="kmno4" />
    <result column="p4" jdbcType="REAL" property="p4" />
    <result column="nh4" jdbcType="REAL" property="nh4" />
    <result column="water_temperature" jdbcType="REAL" property="waterTemperature" />
    <result column="ph" jdbcType="REAL" property="ph" />
    <result column="dissolved_oxygen" jdbcType="REAL" property="dissolvedOxygen" />
    <result column="redox_potential" jdbcType="REAL" property="redoxPotential" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, station_id, area_id, valley_id, code, station_type_id, longitude, latitude, 
    lever_id, connected, monitor_time, kmno4, p4, nh4, water_temperature, ph, dissolved_oxygen, 
    redox_potential, status
  </sql>
  <select id="selectByExample" parameterType="com.suchness.intellisense.model.WaterQualityStationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from water_quality_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from water_quality_station
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from water_quality_station
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.suchness.intellisense.model.WaterQualityStationExample">
    delete from water_quality_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suchness.intellisense.model.WaterQualityStation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into water_quality_station (name, station_id, area_id, 
      valley_id, code, station_type_id, 
      longitude, latitude, lever_id, 
      connected, monitor_time, kmno4, 
      p4, nh4, water_temperature, ph, 
      dissolved_oxygen, redox_potential, status
      )
    values (#{name,jdbcType=VARCHAR}, #{stationId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{valleyId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{stationTypeId,jdbcType=INTEGER}, 
      #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, #{leverId,jdbcType=INTEGER}, 
      #{connected,jdbcType=VARCHAR}, #{monitorTime,jdbcType=TIMESTAMP}, #{kmno4,jdbcType=REAL}, 
      #{p4,jdbcType=REAL}, #{nh4,jdbcType=REAL}, #{waterTemperature,jdbcType=REAL}, #{ph,jdbcType=REAL}, 
      #{dissolvedOxygen,jdbcType=REAL}, #{redoxPotential,jdbcType=REAL}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suchness.intellisense.model.WaterQualityStation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into water_quality_station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="stationId != null">
        station_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="valleyId != null">
        valley_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="stationTypeId != null">
        station_type_id,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="leverId != null">
        lever_id,
      </if>
      <if test="connected != null">
        connected,
      </if>
      <if test="monitorTime != null">
        monitor_time,
      </if>
      <if test="kmno4 != null">
        kmno4,
      </if>
      <if test="p4 != null">
        p4,
      </if>
      <if test="nh4 != null">
        nh4,
      </if>
      <if test="waterTemperature != null">
        water_temperature,
      </if>
      <if test="ph != null">
        ph,
      </if>
      <if test="dissolvedOxygen != null">
        dissolved_oxygen,
      </if>
      <if test="redoxPotential != null">
        redox_potential,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        #{stationId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="valleyId != null">
        #{valleyId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="stationTypeId != null">
        #{stationTypeId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="leverId != null">
        #{leverId,jdbcType=INTEGER},
      </if>
      <if test="connected != null">
        #{connected,jdbcType=VARCHAR},
      </if>
      <if test="monitorTime != null">
        #{monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="kmno4 != null">
        #{kmno4,jdbcType=REAL},
      </if>
      <if test="p4 != null">
        #{p4,jdbcType=REAL},
      </if>
      <if test="nh4 != null">
        #{nh4,jdbcType=REAL},
      </if>
      <if test="waterTemperature != null">
        #{waterTemperature,jdbcType=REAL},
      </if>
      <if test="ph != null">
        #{ph,jdbcType=REAL},
      </if>
      <if test="dissolvedOxygen != null">
        #{dissolvedOxygen,jdbcType=REAL},
      </if>
      <if test="redoxPotential != null">
        #{redoxPotential,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suchness.intellisense.model.WaterQualityStationExample" resultType="java.lang.Long">
    select count(*) from water_quality_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update water_quality_station
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.stationId != null">
        station_id = #{record.stationId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.valleyId != null">
        valley_id = #{record.valleyId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.stationTypeId != null">
        station_type_id = #{record.stationTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DECIMAL},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DECIMAL},
      </if>
      <if test="record.leverId != null">
        lever_id = #{record.leverId,jdbcType=INTEGER},
      </if>
      <if test="record.connected != null">
        connected = #{record.connected,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorTime != null">
        monitor_time = #{record.monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.kmno4 != null">
        kmno4 = #{record.kmno4,jdbcType=REAL},
      </if>
      <if test="record.p4 != null">
        p4 = #{record.p4,jdbcType=REAL},
      </if>
      <if test="record.nh4 != null">
        nh4 = #{record.nh4,jdbcType=REAL},
      </if>
      <if test="record.waterTemperature != null">
        water_temperature = #{record.waterTemperature,jdbcType=REAL},
      </if>
      <if test="record.ph != null">
        ph = #{record.ph,jdbcType=REAL},
      </if>
      <if test="record.dissolvedOxygen != null">
        dissolved_oxygen = #{record.dissolvedOxygen,jdbcType=REAL},
      </if>
      <if test="record.redoxPotential != null">
        redox_potential = #{record.redoxPotential,jdbcType=REAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update water_quality_station
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      station_id = #{record.stationId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      valley_id = #{record.valleyId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      station_type_id = #{record.stationTypeId,jdbcType=INTEGER},
      longitude = #{record.longitude,jdbcType=DECIMAL},
      latitude = #{record.latitude,jdbcType=DECIMAL},
      lever_id = #{record.leverId,jdbcType=INTEGER},
      connected = #{record.connected,jdbcType=VARCHAR},
      monitor_time = #{record.monitorTime,jdbcType=TIMESTAMP},
      kmno4 = #{record.kmno4,jdbcType=REAL},
      p4 = #{record.p4,jdbcType=REAL},
      nh4 = #{record.nh4,jdbcType=REAL},
      water_temperature = #{record.waterTemperature,jdbcType=REAL},
      ph = #{record.ph,jdbcType=REAL},
      dissolved_oxygen = #{record.dissolvedOxygen,jdbcType=REAL},
      redox_potential = #{record.redoxPotential,jdbcType=REAL},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suchness.intellisense.model.WaterQualityStation">
    update water_quality_station
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="valleyId != null">
        valley_id = #{valleyId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="stationTypeId != null">
        station_type_id = #{stationTypeId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="leverId != null">
        lever_id = #{leverId,jdbcType=INTEGER},
      </if>
      <if test="connected != null">
        connected = #{connected,jdbcType=VARCHAR},
      </if>
      <if test="monitorTime != null">
        monitor_time = #{monitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="kmno4 != null">
        kmno4 = #{kmno4,jdbcType=REAL},
      </if>
      <if test="p4 != null">
        p4 = #{p4,jdbcType=REAL},
      </if>
      <if test="nh4 != null">
        nh4 = #{nh4,jdbcType=REAL},
      </if>
      <if test="waterTemperature != null">
        water_temperature = #{waterTemperature,jdbcType=REAL},
      </if>
      <if test="ph != null">
        ph = #{ph,jdbcType=REAL},
      </if>
      <if test="dissolvedOxygen != null">
        dissolved_oxygen = #{dissolvedOxygen,jdbcType=REAL},
      </if>
      <if test="redoxPotential != null">
        redox_potential = #{redoxPotential,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suchness.intellisense.model.WaterQualityStation">
    update water_quality_station
    set name = #{name,jdbcType=VARCHAR},
      station_id = #{stationId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      valley_id = #{valleyId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      station_type_id = #{stationTypeId,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      lever_id = #{leverId,jdbcType=INTEGER},
      connected = #{connected,jdbcType=VARCHAR},
      monitor_time = #{monitorTime,jdbcType=TIMESTAMP},
      kmno4 = #{kmno4,jdbcType=REAL},
      p4 = #{p4,jdbcType=REAL},
      nh4 = #{nh4,jdbcType=REAL},
      water_temperature = #{waterTemperature,jdbcType=REAL},
      ph = #{ph,jdbcType=REAL},
      dissolved_oxygen = #{dissolvedOxygen,jdbcType=REAL},
      redox_potential = #{redoxPotential,jdbcType=REAL},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>